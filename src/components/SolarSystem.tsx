/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\public\models\Solar System.glb -o src/components/SolarSystem.tsx -k -K -r public 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["Node-Mesh"]: THREE.Mesh;
    ["Node-Mesh_1"]: THREE.Mesh;
    ["Node-Mesh_2"]: THREE.Mesh;
    ["Node-Mesh_3"]: THREE.Mesh;
    ["Node-Mesh_4"]: THREE.Mesh;
    ["Node-Mesh_5"]: THREE.Mesh;
    ["Node-Mesh_6"]: THREE.Mesh;
    ["Node-Mesh_7"]: THREE.Mesh;
    ["Node-Mesh_8"]: THREE.Mesh;
    ["Node-Mesh_9"]: THREE.Mesh;
    ["Node-Mesh_10"]: THREE.Mesh;
    ["Node-Mesh_11"]: THREE.Mesh;
    ["Node-Mesh_12"]: THREE.Mesh;
    ["Node-Mesh_13"]: THREE.Mesh;
  };
  materials: {
    mat19: THREE.MeshStandardMaterial;
    mat15: THREE.MeshStandardMaterial;
    mat20: THREE.MeshStandardMaterial;
    mat13: THREE.MeshStandardMaterial;
    mat4: THREE.MeshStandardMaterial;
    mat9: THREE.MeshStandardMaterial;
    mat14: THREE.MeshStandardMaterial;
    mat8: THREE.MeshStandardMaterial;
    mat3: THREE.MeshStandardMaterial;
    mat5: THREE.MeshStandardMaterial;
    mat18: THREE.MeshStandardMaterial;
    mat21: THREE.MeshStandardMaterial;
    mat22: THREE.MeshStandardMaterial;
    mat12: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function SolarSystem(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/Solar System.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group>
        <group name="Node">
          <mesh
            name="Node-Mesh"
            geometry={nodes["Node-Mesh"].geometry}
            material={materials.mat19}
          />
          <mesh
            name="Node-Mesh_1"
            geometry={nodes["Node-Mesh_1"].geometry}
            material={materials.mat15}
          />
          <mesh
            name="Node-Mesh_2"
            geometry={nodes["Node-Mesh_2"].geometry}
            material={materials.mat20}
          />
          <mesh
            name="Node-Mesh_3"
            geometry={nodes["Node-Mesh_3"].geometry}
            material={materials.mat13}
          />
          <mesh
            name="Node-Mesh_4"
            geometry={nodes["Node-Mesh_4"].geometry}
            material={materials.mat4}
          />
          <mesh
            name="Node-Mesh_5"
            geometry={nodes["Node-Mesh_5"].geometry}
            material={materials.mat9}
          />
          <mesh
            name="Node-Mesh_6"
            geometry={nodes["Node-Mesh_6"].geometry}
            material={materials.mat14}
          />
          <mesh
            name="Node-Mesh_7"
            geometry={nodes["Node-Mesh_7"].geometry}
            material={materials.mat8}
          />
          <mesh
            name="Node-Mesh_8"
            geometry={nodes["Node-Mesh_8"].geometry}
            material={materials.mat3}
          />
          <mesh
            name="Node-Mesh_9"
            geometry={nodes["Node-Mesh_9"].geometry}
            material={materials.mat5}
          />
          <mesh
            name="Node-Mesh_10"
            geometry={nodes["Node-Mesh_10"].geometry}
            material={materials.mat18}
          />
          <mesh
            name="Node-Mesh_11"
            geometry={nodes["Node-Mesh_11"].geometry}
            material={materials.mat21}
          />
          <mesh
            name="Node-Mesh_12"
            geometry={nodes["Node-Mesh_12"].geometry}
            material={materials.mat22}
          />
          <mesh
            name="Node-Mesh_13"
            geometry={nodes["Node-Mesh_13"].geometry}
            material={materials.mat12}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Solar System.glb");
